name: solar system workflow

on:
    workflow_dispatch:
    push:
        branches:
          - main
          - 'feature/*'

env:
    MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
    MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
    MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        
        strategy:
            matrix:
                nodjs_version: [18, 20]
                operating_system: [ubuntu-latest]
                
        runs-on: ${{ matrix.operating_system }}
        steps:
        - name: unit testing
          uses: actions/checkout@v4

        - name: setup nodejs version -18
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.nodjs_version }}

        - name: cache npm dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: install dependencies
          run: npm install

        - name: unit testing
          id: nodejs-unit-testing-step
          run: npm test

        - name: archive test results
        
          if: always() 
          uses: actions/upload-artifact@v3
          with:
            name: mocha-test-result
            path: test-results.xml

    code-coverage:
        name: code coverage
        runs-on: ubuntu-latest
        steps:
        - name: checkout repository
          uses: actions/checkout@v4

        - name: setup nodejs version -18
          uses: actions/setup-node@v3
          with:
            node-version: 18

        - name: cache npm dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}

        - name: install dependencies
          run: npm install
        
        - name: check code coverage
          continue-on-error: true
          run: npm run coverage
        
        - name: archive test result
          uses: actions/upload-artifact@v3
          with:
            name: code-coverage-result
            path: coverage
            retention-days: 5

    docker:
        name: containerization
        needs: [unit-testing, code-coverage]
        runs-on: ubuntu-latest
        steps:
        - name: checkout repo
          uses: actions/checkout@v4

        - name: dockerhub login
          uses: docker/login-action@v3
          with:
            username: ${{ vars.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_PASSWORD }}

        

          


        
        